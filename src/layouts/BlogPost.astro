---
import FormattedDate from '@/components/FormattedDate'
import Tag from '@/components/Tag'
import { getCollection } from 'astro:content'
import { getCurrentLang, t } from 'src/components/utils/i18n'
import BaseLayout from './BaseLayout.astro'
import { siteConfig } from '@/data/site.config'
const lang = getCurrentLang()
const posts = await getCollection('blog')

console.log(
	'üìù Available Blog Posts:',
	posts.map((p) => ({ slug: p.slug, lang: p.lang }))
)

// Ensure we are checking slugs with the correct language suffix
const formattedSlug = `${Astro.params.slug}-${lang}`

// Try fetching the post in the requested language
let post = posts.find((p) => p.slug === formattedSlug && p.lang === lang)

// If not found, fallback to the English version
let isFallback = false
if (!post) {
	post = posts.find((p) => p.slug === `${Astro.params.slug}-en` && p.lang === 'en')
	isFallback = true
}

// If no post exists in any language, return 404
if (!post) {
	throw new Error(`‚ùå Post not found in any language: ${Astro.url.pathname}`)
}

const { data, readTime, headings, id } = post

const { title, description, pubDate, heroImage, tags } = data

const articleDate = pubDate.toISOString()
---

<BaseLayout
	title={title}
	description={description}
	image={heroImage?.src}
	articleDate={articleDate}
>
	<article class='min-w-full md:py-4 sm:max-w-none md:max-w-none'>
		<header class='mb-3 flex flex-col justify-center items-center gap-6'>
			<div class='flex flex-col gap-2'>
				<div class='flex items-center justify-center gap-x-1'>
					<p class='text-center text-sm text-opacity-50'>
						{t('published', lang)}
						<FormattedDate date={pubDate} />
					</p>
					<p class='text-center text-sm text-opacity-50 font-bold'>
						- {readTime}
					</p>
				</div>
				<h1 class='text-center text-4xl md:text-6xl md:pb-2.5 font-semibold'>
					{title}
				</h1>
			</div>

			<div class='flex flex-wrap justify-center items-center gap-2 gap-y-4 md:gap-5'>
				{tags.map((tag) => <Tag tag={tag} />)}
			</div>
		</header>

		{
			heroImage && (
				<Image
					src={heroImage}
					width={1000}
					height={500}
					quality={100}
					format='jpg'
					loading='eager'
					class='rounded-md w-full max-h-[300px] md:max-h-[500px] my-8 object-cover'
					alt={`Image of ${title}`}
				/>
			)
		}

		<hr />

		<!-- ‚úÖ Show a placeholder message if using fallback language -->
		{
			isFallback && (
				<div class='bg-yellow-200 text-yellow-900 p-4 rounded-md text-center my-6'>
					<p>{t('post_not_available', lang)}</p>
					<p>
						<a
							href={`/${siteConfig.i18n.defaultLocale}/blog/${Astro.params.slug}`}
							class='underline text-blue-600'
						>
							{t('read_original', lang)}
						</a>
					</p>
				</div>
			)
		}

		<div>
			<slot />
		</div>
	</article>
</BaseLayout>
